{"is_source_file": true, "format": "TypeScript", "description": "This file defines a service class in Angular for handling operations related to recipes, such as retrieving, creating, updating, and deleting recipes using a Supabase backend.", "external_files": ["./supabase.service", "../models/recipe.model"], "external_methods": ["SupabaseService.supabase.from", "select", "order", "ilike", "match", "single", "insert", "update", "delete"], "published": ["RecipeService"], "classes": [{"name": "RecipeService", "description": "Angular service providing recipe management operations, interfacing with Supabase for database interactions."}], "methods": [{"name": "async getRecipes(filter: string = ''): Promise<Recipe[]> { getRecipes", "description": "Fetches a list of recipes, optionally filtered by a search string on the title.", "scope": "RecipeService", "scopeKind": "class"}, {"name": "async getRecipe(id: string): Promise<Recipe | null> { getRecipe", "description": "Retrieves a single recipe by its unique identifier.", "scope": "RecipeService", "scopeKind": "class"}, {"name": "async createRecipe(recipe: Omit<Recipe, 'id' | 'created_at' | 'updated_at'>): Promise<Recipe> / createRecipe", "description": "Creates a new recipe entry in the database.", "scope": "RecipeService", "scopeKind": "class"}, {"name": "async updateRecipe(id: string, recipe: Partial<Recipe>): Promise<Recipe> { updateRecipe", "description": "Updates an existing recipe identified by its ID.", "scope": "RecipeService", "scopeKind": "class"}, {"name": "async deleteRecipe(id: string): Promise<void> { deleteRecipe", "description": "Deletes a recipe by its ID.", "scope": "RecipeService", "scopeKind": "class"}, {"name": "constructor(private supabaseService: SupabaseService) {} constructor", "scope": "RecipeService", "scopeKind": "class", "description": "unavailable"}], "calls": ["this.supabaseService.supabase.from", "select", "order", "ilike", "match", "single", "insert", "update", "delete"], "search-terms": ["RecipeService", "SupabaseService", "Angular", "recipe management", "src/app/services/recipe.service.ts"], "state": 2, "file_id": 24, "knowledge_revision": 107, "git_revision": "", "revision_history": [{"51": ""}, {"107": ""}], "ctags": [{"_type": "tag", "name": "RecipeService", "path": "/home/kavia/workspace/code-generation/recipe-hub-13228-13248/recipe_frontend/src/app/services/recipe.service.ts", "pattern": "/^export class RecipeService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/code-generation/recipe-hub-13228-13248/recipe_frontend/src/app/services/recipe.service.ts", "pattern": "/^  constructor(private supabaseService: SupabaseService) {}$/", "language": "TypeScript", "kind": "method", "scope": "RecipeService", "scopeKind": "class"}, {"_type": "tag", "name": "createRecipe", "path": "/home/kavia/workspace/code-generation/recipe-hub-13228-13248/recipe_frontend/src/app/services/recipe.service.ts", "pattern": "/^  async createRecipe(recipe: Omit<Recipe, 'id' | 'created_at' | 'updated_at'>): Promise<Recipe> /", "language": "TypeScript", "kind": "method", "scope": "RecipeService", "scopeKind": "class"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/recipe-hub-13228-13248/recipe_frontend/src/app/services/recipe.service.ts", "pattern": "/^    const { data, error } = await query;$/", "language": "TypeScript", "kind": "constant", "scope": "RecipeService.getRecipes", "scopeKind": "method"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/recipe-hub-13228-13248/recipe_frontend/src/app/services/recipe.service.ts", "pattern": "/^    const { data, error } = await this.supabaseService.supabase.from('recipes').insert([recipe])/", "language": "TypeScript", "kind": "constant", "scope": "RecipeService.createRecipe", "scopeKind": "method"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/recipe-hub-13228-13248/recipe_frontend/src/app/services/recipe.service.ts", "pattern": "/^    const { data, error } = await this.supabaseService.supabase.from('recipes').select('*').matc/", "language": "TypeScript", "kind": "constant", "scope": "RecipeService.getRecipe", "scopeKind": "method"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/recipe-hub-13228-13248/recipe_frontend/src/app/services/recipe.service.ts", "pattern": "/^    const { data, error } = await this.supabaseService.supabase.from('recipes').update(recipe).m/", "language": "TypeScript", "kind": "constant", "scope": "RecipeService.updateRecipe", "scopeKind": "method"}, {"_type": "tag", "name": "deleteRecipe", "path": "/home/kavia/workspace/code-generation/recipe-hub-13228-13248/recipe_frontend/src/app/services/recipe.service.ts", "pattern": "/^  async deleteRecipe(id: string): Promise<void> {$/", "language": "TypeScript", "kind": "method", "scope": "RecipeService", "scopeKind": "class"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/recipe-hub-13228-13248/recipe_frontend/src/app/services/recipe.service.ts", "pattern": "/^    const { data, error } = await query;$/", "language": "TypeScript", "kind": "constant", "scope": "RecipeService.getRecipes", "scopeKind": "method"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/recipe-hub-13228-13248/recipe_frontend/src/app/services/recipe.service.ts", "pattern": "/^    const { data, error } = await this.supabaseService.supabase.from('recipes').insert([recipe])/", "language": "TypeScript", "kind": "constant", "scope": "RecipeService.createRecipe", "scopeKind": "method"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/recipe-hub-13228-13248/recipe_frontend/src/app/services/recipe.service.ts", "pattern": "/^    const { data, error } = await this.supabaseService.supabase.from('recipes').select('*').matc/", "language": "TypeScript", "kind": "constant", "scope": "RecipeService.getRecipe", "scopeKind": "method"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/recipe-hub-13228-13248/recipe_frontend/src/app/services/recipe.service.ts", "pattern": "/^    const { data, error } = await this.supabaseService.supabase.from('recipes').update(recipe).m/", "language": "TypeScript", "kind": "constant", "scope": "RecipeService.updateRecipe", "scopeKind": "method"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/recipe-hub-13228-13248/recipe_frontend/src/app/services/recipe.service.ts", "pattern": "/^    const { error } = await this.supabaseService.supabase.from('recipes').delete().match({ id })/", "language": "TypeScript", "kind": "constant", "scope": "RecipeService.deleteRecipe", "scopeKind": "method"}, {"_type": "tag", "name": "getRecipe", "path": "/home/kavia/workspace/code-generation/recipe-hub-13228-13248/recipe_frontend/src/app/services/recipe.service.ts", "pattern": "/^  async getRecipe(id: string): Promise<Recipe | null> {$/", "language": "TypeScript", "kind": "method", "scope": "RecipeService", "scopeKind": "class"}, {"_type": "tag", "name": "getRecipes", "path": "/home/kavia/workspace/code-generation/recipe-hub-13228-13248/recipe_frontend/src/app/services/recipe.service.ts", "pattern": "/^  async getRecipes(filter: string = ''): Promise<Recipe[]> {$/", "language": "TypeScript", "kind": "method", "scope": "RecipeService", "scopeKind": "class"}, {"_type": "tag", "name": "supabaseService", "path": "/home/kavia/workspace/code-generation/recipe-hub-13228-13248/recipe_frontend/src/app/services/recipe.service.ts", "pattern": "/^  constructor(private supabaseService: SupabaseService) {}$/", "language": "TypeScript", "kind": "property", "scope": "RecipeService", "scopeKind": "class"}, {"_type": "tag", "name": "updateRecipe", "path": "/home/kavia/workspace/code-generation/recipe-hub-13228-13248/recipe_frontend/src/app/services/recipe.service.ts", "pattern": "/^  async updateRecipe(id: string, recipe: Partial<Recipe>): Promise<Recipe> {$/", "language": "TypeScript", "kind": "method", "scope": "RecipeService", "scopeKind": "class"}], "hash": "cdae021092303736a3ec653c5d37b7df", "format-version": 4, "code-base-name": "recipe_frontend", "filename": "recipe_frontend/src/app/services/recipe.service.ts", "fields": [{"name": "constructor(private supabaseService: SupabaseService) {}", "scope": "RecipeService", "scopeKind": "class", "description": "unavailable"}]}